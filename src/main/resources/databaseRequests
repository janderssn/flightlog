H2 syntax
Nice view of yearly count pr type
SELECT year(date), type, sum(no_of_flights) FROM FLIGHT_GROUP group by type, year(date) order by type, year(date)

check if pilot table is ok. should be the same number
select count(*) from pilot;
select count(*) from (select flightlog_id from pilot group by flightlog_id)

Flightgroups pr pilot and type
SELECT type, pilot_id, COUNT(pilot_id) FROM FLIGHT_GROUP GROUP BY TYPE, PILOT_ID

unike piloter pr type i perioden fom 2011 tom 2018
select count(type), type from (select type, name from pilot left join flight_group fg on fg.pilot_id = pilot.id group by type, pilot.id) group by type;

Fordelt på år blir det slik:
select count(type), type, year from (
select type, name,  year(date) as year from pilot left join flight_group fg on fg.pilot_id = pilot.id group by type, pilot.id, year(date)
 ) group by type, year order by year, type;

 Og til slutt, de som har logget både SPG og PG i denne perioden fom 2011 tom 2018
 select name from (select count(id) c, name from (
 select type, name, pilot.id from pilot
 left join flight_group fg on fg.pilot_id = pilot.id
 where type in ('PG','SPG')
 group by type, pilot.id order by name
 ) group by id ) where c =2;


 antall dagskort i databasen. skiller ikke på flysted. scrap et flysted og denne blir riktig
 select count(*) from (SELECT pilot_id, date, sum(no_of_flights) FROM FLIGHT_GROUP where year(date) = 2018 group by date, pilot_id order by pilot_id)

 antall årskort ellers som over (dagskort)
 select count(*) from (SELECT pilot_id FROM FLIGHT_GROUP where year(date) = 2018 group by pilot_id order by pilot_id)

select count(*), card FROM (
  select count(*), CASE WHEN count(*)<10 THEN 'Dagskort' ELSE 'Årskort' END card  from (
    SELECT pilot_id, date FROM FLIGHT_GROUP where year(date) = 2018 group by date, pilot_id order by pilot_id
  ) group by pilot_id
) group by card


Turer hvor hvem og nationalitet
        SELECT fg.FLIGHTLOG_ID , fg.type, fg.PILOT_ID , p.name, cp.name kommer_fra, to.name, fg.date, cto.name flydd_i
        FROM FLIGHT_GROUP fg
        left join TAKE_OFF to on to.id  = fg.TAKE_OFF_ID
        left join  PILOT p on p.id = fg.PILOT_ID
        left join COUNTRY cto on cto.id = to.COUNTRY_ID
        left join COUNTRY cp on cp.id = p.COUNTRY_ID
        where to.id is not null

utenlandsturer av norske piloter:
        SELECT fg.FLIGHTLOG_ID , fg.type, fg.PILOT_ID , p.name, cp.name kommer_fra, to.name, fg.date, YEAR(fg.date), cto.name flydd_i
        FROM FLIGHT_GROUP fg
        left join TAKE_OFF to on to.id  = fg.TAKE_OFF_ID
        left join  PILOT p on p.id = fg.PILOT_ID
        left join COUNTRY cto on cto.id = to.COUNTRY_ID
        left join COUNTRY cp on cp.id = p.COUNTRY_ID
        where to.id is not null
            and cp.COUNTRY_ID  = 160
            and to.COUNTRY_ID <> p.COUNTRY_ID
        order by fg.FLIGHTLOG_ID desc

Hvor mange flyturer av nordmenn i utlandet pr år
        SELECT  YEAR(fg.date), SUM(fg.NO_OF_FLIGHTS), fg.TYPE
        FROM FLIGHT_GROUP fg
        left join TAKE_OFF to on to.id  = fg.TAKE_OFF_ID
        left join  PILOT p on p.id = fg.PILOT_ID
        left join COUNTRY cto on cto.id = to.COUNTRY_ID
        left join COUNTRY cp on cp.id = p.COUNTRY_ID
        where to.id is not null
            and cp.COUNTRY_ID  = 160
            and to.COUNTRY_ID <> p.COUNTRY_ID
        GROUP  BY YEAR(fg.date) , fg.TYPE
order by YEAR(fg.date)

Her kommer unike norske piloter med flyturer i utlandet (pr år)
        SELECT  YEAR(fg.date), COUNT(DISTINCT(p.id))
        FROM FLIGHT_GROUP fg
        left join TAKE_OFF to on to.id  = fg.TAKE_OFF_ID
        left join  PILOT p on p.id = fg.PILOT_ID
        left join COUNTRY cto on cto.id = to.COUNTRY_ID
        left join COUNTRY cp on cp.id = p.COUNTRY_ID
        where to.id is not null
            and cp.COUNTRY_ID  = 160
            and to.COUNTRY_ID <> p.COUNTRY_ID
GROUP BY YEAR(fg.date)